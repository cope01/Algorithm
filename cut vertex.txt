단절점(cut vertex)란 연결요소에서 한개의 점을 제거했을 때, 연결요소를 2개 이상으로 나누는 점.

2개로 나뉘었다고 하면. 다른 의미로는 1번 연결요소에서 2번 연결요소로 진행할 때 꼭 거쳐야 하는 점이다.

가장 무식하게 생각을 해보면 점이 V개 있을 때 점을 하나씩 제거해보고 DFS를 돌려서 연결요소의 개수가 바뀌면 그 점은 단절점이 된다.
이런 방법은 V번 dfs를 돌려야 하므로 O(V*(V+E))가 된다.

DFS의 특징을 조금 이용하면 DFS 1번에 모든 단절점을 구할 수 있다.

지금부터 설명할 단절점 알고리즘은 존 에드워드 홉 크로프트와 로버트 앙드레 타잔이란 사람이 발명한 것으로,
보통 undirected graph에 대해 정의된다. directed graph는 더 복잡한 알고리즘을 사용해야 한다.

스패닝 트리를 만들 것이다.
스패닝 트리란 모든 vertex가 연결되어 있는 트리.
(+ MST :  Minimum Spanning Tree 최소 신장 트리는 가중치의 합이 최소인 스패닝 트리)

DFS를 1번 돌리게 되면 스패닝 트리가 생긴다.
방문 순서대로 번호를 매기고.

cut vertex 의 특성. 특정 정점이 cut vertex라면 cut vertex에 바로 인접해있는 정점들의 쌍이 단절점이 없으면 우회로를 통해 연결되어 있으면 안된다.(반드시 단절점을 거쳐서 민나야 한다.)
위의 특성을 이용
-> 특정 A번 정점에서 자식 노드들이 정점 A를 거치지 않고 정점 A보다 빠른 방문번호를 가진 정점으로 갈 수 있다면 단절점이다.
ex) 4번이 단절점이라고 치고 3번과 5번이 4번에 연결되어 있다고 하자.
3번에서 4번을 거치지 않고 5번으로 갈 수 없기 때문에.

이 방법을 거치게 되면 O(V+E)의 1번의 DFS로 답을 구할 수 있다.

// 출처 : https://www.crocus.co.kr/1164