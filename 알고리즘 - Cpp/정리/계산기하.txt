angleSort 
sin, sin^-1을 이용하면.
일단 arcsin의 라이브러리를 사용하면 지장이 생기고,

값이 매우 근사하게 가면, 부동소수점의 오차로 인해 오류가 생길 수 있다.
-> 계산기하학은 signed area를 사용해야 한다.

determinant으로 부호 면적을 구하게 되는데.
ex)
3개의 점 (a1, b1) (a2, b2) (a3, b3)이면

1  |  a1  a2  a3 |
ㅡ 
2  |  b1  b2  b3 |

으로 (a2*b1 + a3*b2 + a1*b3) - (a1*b2 + a2*b3 + a3*b1)을 이용해서 
signed area 가 양의 부호인지 음의 부호인지를 통해서 계산하게 된다.
이때 시계방향으로 회전하는 경우에는 (+)의 부호를,
반시계방향으로 회전하는 경우에는 (-)의 부호를 가진다.
같은 선상에 존재하게 되면 0이 된다.
이 부호는 일관되게 내가 설정하면 된다.

1/2은 할 필요가 없는게 어차피 부호를 구하는 것이므로, 정수형으로 하기 위해서 안해줘도 된다.

cf) 단순다각형에서만 가능하다
리본 형태로 된 
3  1
2  4 의 형태로 된 것이 있으면 signed area 가 0이 될수도 있다.

위의 3개의 점으로 이루어진 어떤 다각형에서 

quick sort를 이용해서 음의 부호인 것은 왼쪽에
양의 부호인 것은 오른쪽에

(      -      )  pivot (       +       )

또 새로운 pivot을 설정하여 하고... 이런 느낌으로 문제를 풀면 된다.

이게 귀찮으면 priority queue 를 이용하여 풀면 된다.
넣고, 기존에 있는 것들과 비교해서 (-)의 부호를 가지면 앞에,
(+)의 부호를 가지면 뒤에 놓으면 되고,
0이 나오게 되면 원점과의 거리를 계산해서 짧은 것을 앞에 두면 된다.
