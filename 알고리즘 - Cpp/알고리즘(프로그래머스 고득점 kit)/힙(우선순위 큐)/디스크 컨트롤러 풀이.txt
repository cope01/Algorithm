작업을 수행하고 있지 않을때에는
먼저 요청이 들어온 작업부터 처리.

작업 수행중에는 각 작업의 
요청부터 종료까지 걸린 시간의 평균이 최소가 되도록.


[[0, 3], [1, 9], [2, 6]]

1) 0ms 시점에 3ms 걸리는 작업 요청이 들어온다. - 작업을 수행하고 있지 않음. 먼저 요청이 들어온 작업부터 수행.
2) 1ms 시점에 9ms 걸리는 작업 요청이 들어온다. - 작업을 수행중. 1ms부터 대기

3) 2ms 시점에 6ms 걸리는 작업 요청이 들어온다. - 작업을 수행중. 2ms부터 대기

1)의 수행을 마치고 2), 3) 중에 어떤 작업을 먼저 수행할 것인가?

2)를 먼저 수행한다고 하면

(3 + 11 + 16) / 3 = 10

3)을 먼저 수행한다고 하면

(3 + 7 + 17) / 3 = 9


방법
1) 백트래킹으로 무식하게 진행. 500개니까 2^500이니까 안될듯. 500!인가 그 사이.
안됨.

2) 우선 순위 큐를 어떻게 만들 것인가.
작업의 시간이 적게 소요되는 것부터 다 하고 작업의 시간이 많이 소요되는 것을 하는게 효율적인 가?

if(tasking == false){
	now + 작업 시간 계산해서 가장 높은 것부터 나오면 됨.
	500개니까 계속 갱신하면서 추가해도 될듯.
	즉, now + 










