일반적인 정렬은 sorted() 혹은 .sort()를 사용한다.

a = [4, 1, 2, 5, 7, 3, 6]
b = sorted(a)
# b = [1, 2, 3, 4, 5, 6, 7]

# 인자 없이 그냥 사용해주면 각 요소 순서대로 정렬을 수행한다.
# x[0]에 대해서 우선하여 정렬하고 x[0]가 같으면 x[1]로 정렬 수행
a = [(1, 2), (0, 1), (5, 1), (5, 2), (3, 0)]
b = sorted(a)
# b = [(0, 1), (1, 2), (3, 0), (5, 1), (5, 2)]

# key 인자에 함수를 넘겨주면 해당 함수의 반환값을 비교하여 순서대로 정렬한다.
c = sorted(a, key = lambda x : x[0])
# c = [(0, 1), (1, 2), (3, 0), (5, 1), (5, 2)]
d = sorted(a, key = lambda x : x[1])
# d = [(3, 0), (0, 1), (5, 1), (1, 2), (5, 2)]

# 아이템 첫 번째 인자를 기준으로 오름차순으로 먼저 정렬하고,
# 그 안에서 다음 두번째 인자를 기준으로 내림차순으로 정렬하게 하려면,
# 다음과 같이 할 수 있다.
e = [(1, 3), (0, 3), (1, 4), (1, 5), (0, 1), (2, 4)]
f = sorted(e, key = lambda x : (x[0], -x[1]))
# f = [(0, 3), (0, 1), (1, 5), (1, 4), (1, 3), (2, 4)]

정리
- sorted()의 key 인자로 내가 커스텀할 비교 함수를 보내주면 된다.
- 비교 함수는 비교할 아이템의 요소를 반환하면 된다.
- 비교 함수는 익명 함수(lambda)도 가능하고, 별도로 정의해도 된다.
- 비교할 아이템의 요소가 복수 개인 경우. 튜플로 그 순서를 내보내주면 된다.
	- (-)를 붙이면 현재 정렬차순과 반대로 하게 된다.